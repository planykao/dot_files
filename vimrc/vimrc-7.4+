" ================================== vundle ====================================
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'majutsushi/tagbar'
Plugin 'aghareza/vim-gitgrep'
Plugin 'scrooloose/nerdtree'
Plugin 'Yggdroot/LeaderF'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'vim-airline/vim-airline'
call vundle#end()            " required
filetype plugin indent on    " required
" ==============================================================================


" ============================= editor settings ================================
syntax on
hi statement guifg=darkgray
hi preproc guifg=seagreen
hi constant guifg=darkgreen
hi Search ctermfg=darkblue ctermbg=white
hi Comment ctermfg=darkgreen
hi String ctermfg=blue
" tab color
hi TabLineFill cterm=none ctermfg=grey ctermbg=cyan
hi TabLine cterm=none ctermfg=white ctermbg=cyan
hi TabLineSel cterm=none ctermfg=black ctermbg=yellow
highlight ExtraWhitespace ctermbg=red guibg=red
set tabstop=4
set expandtab
set shiftwidth=4
set autoindent
set smartindent
set fileformat=unix
set cindent
set makeprg=make\ all
set hlsearch
set showmode
set backspace=2
set number
set switchbuf+=usetab,newtab
set runtimepath^=~/.vim/bundle/ctrlp.vim
" set colorcolumn=120
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%121v.\+/
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
" ==============================================================================


" ================================== tagbar ====================================
let g:tagbar_left=1
" ==============================================================================


" ================================= nerdtree ===================================
" let g:NERDTreeWinPos = "right"
" let NERDTreeMapOpenInTab='<ENTER>'
" ==============================================================================

" =================================== ctrlp ====================================
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_regexp = 1
" ==============================================================================


" ================================== keymap ====================================
nmap <F8> :TagbarToggle<CR>
map <F3> <ESC> :GitGrep <C-R><C-W><CR>
map <F4> <ESC>:Leaderf<CR>
map <F6> :vimgrep /<C-r><C-w>/ %<CR>:ccl<CR>:cwin<CR><C-W>J:nohls<CR>
map <C-]> g<C-]>
map <C-LeftMouse> g<C-]>
" ==============================================================================


" ================================= cscope =====================================
if filereadable("cscope.out")
    cs add cscope.out
" else add the database pointed to by environment variable
elseif $CSCOPE_DB != ""
    cs add $CSCOPE_DB
endif
set cscopequickfix=c-,d-,e-,g-,i-,s-,t-
nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>:cwindow<CR>
nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>:cwindow<CR>
nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>:cwindow<CR>
nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>:cwindow<CR>
nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>:cwindow<CR>
nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>:cwindow<CR>
nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>:cwindow<CR>
nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>:cwindow<CR>
" ==============================================================================


" ===================================airline====================================
" set status line
set laststatus=2
" enable powerline-fonts
let g:airline_powerline_fonts = 1
" enable tabline
let g:airline#extensions#tabline#enabled = 1
" ==============================================================================
